.xlarge-container
  %p.filters
    Filter:
    %a.selected{ href: "#", data: { location: "all" } } All
    |
    %a{ href: "#", data: { location: "units" } } Units
    |
    %a{ href: "#", data: { location: "common-areas" } } Common Areas
    |
    %a{ href: "#", data: { location: "amenities" } } Amenities

  %h1= project["Name"]

  - @finishes.each do |category, finishes|
    - next if finishes.nil? or finishes.length == 0

    %h2= category

    %table
      %thead
        %tr
          %th{ style: "width: 33%;" } Description
          %th{ style: "width: 33%;" } Option Info
          %th{ style: "width: 34%;" } Option Image
      %tbody
        - finishes.each do |finish|
          - finish_options = finish.finish_options
          - finish_options_count = finish_options.length
          - finish_option = finish_options.shift

          %tr.selection{ class: finish["Location"].downcase.gsub(" ", "-") }
            %td{ rowspan: [finish_options_count, 1].max }
              %p.bold{ style: "margin-bottom: 0px; line-height: 1.2;" }= finish["Type"]
              %p= "#{finish['Location']} - #{finish['Room']}"

              - if !finish["Notes"].nil?
                - notes = (finish["Notes"] || "").gsub("\n", "<br>")
                .notes
                  = markdown.render(notes)

              %td
                - if !finish_option.nil?
                  %p.bold= finish_option["Name"]

                  - if !finish_option["Info"].nil?
                    - info = (finish_option["Info"] || "").gsub("\n", "<br>")
                    .notes
                      = markdown.render(info)

              %td
                - if !finish_option.nil? and !finish_option["Image"].nil?
                  - images = finish_option["Image"].first(2)
                  - images.each do |m|
                    %a{ href: m["url"], target: "_blank" }
                      %img{ class: images.length == 1 ? "one" : "two", src: m["url"] }

          - finish_options.each do |finish_option|
            %tr.selection{ class: finish["Location"].downcase.gsub(" ", "-") }
              %td
                %p.bold= finish_option["Name"]

                - if !finish_option["Info"].nil?
                  - info = (finish_option["Info"] || "").gsub("\n", "<br>")
                  .notes
                    = markdown.render(info)

              %td
                - if !finish_option["Image"].nil?
                  - images = finish_option["Image"].first(2)
                  - images.each do |m|
                    %a{ href: m["url"], target: "_blank" }
                      %img{ class: images.length == 1 ? "one" : "two", src: m["url"] }

:javascript
  $(document).ready(function () {
    var $filters = $(".filters");
    $filters.click("a", function (e) {
      e.preventDefault();
      var $this = $(e.target);
      var location = $this.data("location");

      $(".filters a").removeClass("selected");
      $this.addClass("selected");
      $(".selection").show();

      if (location != "all") {
        $(".selection").hide();
        $(".selection." + location).show();
      }
    });
  });

:css
  table {
    table-layout: fixed;
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
  }

  table, th, td {
    border: 1px solid black;
    word-wrap: break-word;
  }

  td {
    vertical-align: top;
    padding: 3px 5px;
  }

  img {
    padding: 1px;
    max-width: 175px;
    max-height: 175px;
    display: inline-block;
  }

  .bordered {
    border: 1px solid #cccccc;
  }

  .selection-info {
    border-right: 1px solid #cccccc;
    border-bottom: 1px solid #cccccc;
    word-wrap: break-word;
  }

  .selection p {
    margin-bottom: 5px;
    word-wrap: break-word;
  }

  .selection .notes p, .selection .notes a {
    font-size: 14px;
  }

  a.selected {
    color: #000000;
    font-weight: bold;
  }

  a.selected:hover {
    text-decoration: none;
  }

  @media print {
    body { font-size: 14px; }
    table { page-break-inside:auto; page-break-after: always;}
    tr { page-break-inside:avoid; page-break-after:auto }
    img.one { max-width: 175px; max-height: 175px; }
    img.two { max-width: 100px; max-height: 100px; }
  }


