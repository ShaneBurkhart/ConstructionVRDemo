%script(src="/script.js")

.large-container
  %p
    %a{ href: "/project/#{access_token}" } Back to all Units

  %hr

  .row
    .third
      %h1= unit["Name"]
      %ul
        - (unit["Details"] || "").split("\n").each do |detail|
          %li= detail
    .two-third
      #unit-floor-plan
        %img{ src: unit["Floor Plan Image"][0]["url"] }
        - unit_pano_data.each do |pano|
          - if pano["Floor Plan Label X"]
            .label{ data: { id: pano["Record ID"] }, style: "left: #{pano['Floor Plan Label X']}%; top: #{pano['Floor Plan Label Y']}%;"}= pano["Name"]
      %span * hover floor plan to show labels
  %p
    %a.button.fullscreen-toggle{ href: "#" } Fullscreen Mode
    - if is_debug_mode
      %a.button.log-coord{ href: "#" } Log Coords

  #pano-window
    - if is_debug_mode
      .debug-center-window
    .controls
      %a.feedback-toggle Give Feedback
      %a.fullscreen-toggle Exit
    .fullscreen-feedback
      .container{ style: "height: 100%; position: relative;" }
        %textarea#fullscreen-feedback-input{ placeholder: "Enter your feedback here..." }
        %button#fullscreen-feedback-submit Submit Feedback

  #pano-previews
    - unit_pano_data.each do |pano|
      .pano-preview{ data: { id: pano["Record ID"] }}
        .name= pano["Name"]

.container
  %textarea#feedback-input{ name: "notes", placeholder: "Enter your feedback here..." }
  %button#feedback-submit Submit Feedback

  %br

  %h2 Recent Feedback
  #feedbacks
    #feedback-template{ style: "display: none;" }
      .feedback
        %p
          %strong.pano_name
          %span.created_at
        %p.notes

    - feedbacks.each do |feedback|
      %hr
      .feedback
        %p
          %strong.unit_name= feedback["Pano Name"].first
          %span.created_at= "(#{feedback['Created At'].strftime('%b %e, %Y')})"
        %p.notes= feedback["Notes"].gsub("\n", "<br>")

- if is_debug_mode
  :javascript
    $(document).ready(function () {
      var $unitFloorPlan = $("#unit-floor-plan img");

      $unitFloorPlan.click(function (e) {
        var $this = $(this);
        var pageX = e.pageX;
        var pageY = e.pageY;
        var offset = $this.offset();
        var width = $this.width();
        var height = $this.height();

        var percentX = 100 * (pageX - offset.left) / width;
        var percentY = 100 * (pageY - offset.top) / height;

        console.log(percentX + "\t" + percentY);
      });
    });

:javascript
  var _panoData = #{unit_pano_data.to_json};
  var _accessToken = "#{access_token}";
  var _isDebugMode = #{is_debug_mode};
