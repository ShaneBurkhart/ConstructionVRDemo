%script(src="/underscore.js")
%script(src="/script.js?v=190308")

.large-container
  %p
    %a{ href: "/project/#{access_token}" } Back to all Units

  %hr

  - if is_admin_mode
    %p
      %a{ href: "/project/#{access_token}/unit/#{unit.id}/feedback_feed" } Go to Feedback Feed

    %p
      Versions:
    %ul
      - unit_versions.each do |uv|
        %li
          - label = Time.parse(uv["Created At"]).strftime('%b %e, %Y')
          - label += " (Current)" if uv.id == unit["Current Version"][0]
          - label += " (Errors)" if uv.has_errors?
          - label += " (Rendering)" if uv.is_rendering?
          - if uv.id == @version_id
            %b= "Viewing: "

          - if uv.is_viewable?
            %a{ href: "?version=#{uv.id}" }= label
          - else
            %span= label


    %hr

  .row
    .third
      %h1= unit["Name"]
      %ul
        - (unit["Details"] || "").split("\n").each do |detail|
          %li= detail
    .two-third
      #unit-floor-plan
        .floor-plan-wrapper
          %img{ src: unit["Floor Plan Image URL"] }
          - unit_pano_data.each do |pano|
            - if pano["Floor Plan Label X"]
              .label{ data: { id: pano["Record ID"] }, style: "left: #{pano['Floor Plan Label X']}%; top: #{pano['Floor Plan Label Y']}%;"}
                %span= pano["Name"]
        %p * hover floor plan to show labels
      - if is_admin_mode
        %p
          %a.button.set-floor-plan-hotspot{ href: "#" } Set Floor Plan Hotspot
          %a.button.red.remove-floor-plan-hotspot{ href: "#" } Remove Floor Plan Hotspot
        #floor-plan-hotspot-pano-previews.pano-previews
          - unit_pano_data.each do |pano|
            - next if pano["Name"].include? "Entry"
            .pano-preview{ data: { id: pano["Record ID"] }}
              .name= pano["Name"]

  - if !is_tour
    %p
      %a.button.green{ href: "?show_tour=1&version=#{selected_version.id}" } Go to Virtual Tour

    #screenshots
      %h2 Interior Renderings
      - selected_version.screenshot_versions.each do |sv|
        %p
          %img{ src: sv["Image URL"] }

  - else
    - if selected_version.screenshot_versions.length > 0
      %p
        %a.button.green{ href: "?version=#{selected_version.id}" } Go to Interior Renderings

    #virtual-tour
      %h2 Virtual Tour
      %p
        %a.button.fullscreen-toggle{ href: "#" } Fullscreen Mode
        - if is_admin_mode
          %a.button.set-initial-yaw{ href: "#" } Set Initial Yaw
        - elsif is_debug_mode
          %a.button.log-coord{ href: "#" } Log Coords

      #pano-window
        - if is_debug_mode
          .debug-center-window
        .controls
          - if is_admin_mode
            %a.feedback-toggle Give Feedback
          %a.fullscreen-toggle Exit
        - if is_admin_mode
          .fullscreen-feedback
            .container{ style: "height: 100%; position: relative;" }
              %textarea#fullscreen-feedback-input{ placeholder: "Enter your feedback here..." }
              .button-wrapper
                %button.feedback-add-file#fullscreen-feedback-add-file Add File
                %button#fullscreen-feedback-submit Submit Feedback

      - if is_admin_mode
        %p
          %a.button.set-link-hotspot{ href: "#" } Set Link Hotspot
      #pano-previews.pano-previews
        - unit_pano_data.each do |pano|
          .pano-preview{ data: { id: pano["Record ID"] }}
            .name= pano["Name"]

      - if is_admin_mode
        %textarea#feedback-input{ name: "notes", placeholder: "Enter your feedback here..." }
        %input{id: "feedback-is-fix", type: "checkbox", name: "is-fix", checked: true } Fix?
        %br
        %button.feedback-add-file#feedback-add-file Add File
        %button#feedback-submit Submit Feedback

        %br
        %br

        %h2 Recent Feedback
        #feedbacks
          #feedback-template{ style: "display: none;" }
            .feedback
              %p
                %strong.pano_name
                %span.created_at
              .show-notes
                %a.feedback-image{ target: "_blank" }
                  %img{ style: "width: 300px;" }
                .notes
                .break
                %p
                  %a.edit-feedback{ href: "#" } Edit
              .edit-notes{ style: "display: none;" }
                %textarea.notes-input
                %button.update-feedback Update
                %a.cancel-update-feedback{ href: "#" } Cancel

          - feedbacks.each do |feedback|
            %hr
            .feedback{ data: { feedback_id: feedback.id } }
              %p
                %a.perspective-link{ href: "#", data: { "pano-version-id": feedback["Pano Version"].first, perspective: feedback["View Parameters"] } }
                  %strong.unit_name>= feedback["Pano Name"].first
                %span.created_at= "(#{Time.parse(feedback['Created At']).strftime('%b %e, %Y %l:%M%P')})"
              .show-notes
                - if !feedback["Screenshot"].nil?
                  %a.feedback-image{ href: feedback["Screenshot"][0]["url"], target: "_blank" }
                    %img{ src: feedback["Screenshot"][0]["url"], style: "width: 300px;" }
                .notes= feedback.notes_html
                .break
                %p
                  %a.edit-feedback{ href: "#" } Edit
              .edit-notes{ style: "display: none;" }
                %textarea.notes-input= feedback["Notes"]
                %button.update-feedback Update
                %a.cancel-update-feedback{ href: "#" } Cancel

      %input#feedback-file-upload.hidden{ type: "file", name: "feedback-file-upload", accept: "image/*" }


- if is_debug_mode
  :javascript
    $(document).ready(function () {
      var $unitFloorPlan = $("#unit-floor-plan img");

      $unitFloorPlan.click(function (e) {
        var $this = $(this);
        var pageX = e.pageX;
        var pageY = e.pageY;
        var offset = $this.offset();
        var width = $this.width();
        var height = $this.height();

        var percentX = 100 * (pageX - offset.left) / width;
        var percentY = 100 * (pageY - offset.top) / height;

        console.log(percentX + "\t" + percentY);
      });
    });

:javascript
  var _panoData = #{unit_pano_data.to_json};
  var _unitVersionId = "#{@version_id}";
  var _accessToken = "#{access_token}";
  var _isDebugMode = #{is_debug_mode};
  var AWS_IDENTITY_POOL_ID = "#{aws_identity_pool_id}";
