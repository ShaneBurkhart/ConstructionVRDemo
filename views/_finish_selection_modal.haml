.ui.modal.finish-selection-modal
  .ui.inverted.dimmer
    .ui.text.loader Linking

  .header
    .pull-right
      .ui.icon.input
        %input.finish-search-input{ type: "text", placeholder: "Search for something" }
    %h4 Search for a finish option to link.

  .scrolling.content.search-content
    .ui.active.inverted.dimmer
      .ui.text.loader Searching

    .search-options-container

  .actions
    .pull-left
      %p
        Selection:
        %span.bold.selection-type
        %span{ style: "font-weight: normal;" } for
        %span.bold.selection-location
    .ui.green.button.open-create-finish-option-modal Create New Option
    .ui.cancel.button Close

.ui.small.modal.edit-finish-option-modal
  .ui.inverted.dimmer
    .ui.text.loader Saving & Linking

  .header.option-name

  .scrolling.content
    .ui.form.option-form
      %input.record-id{ type: "hidden" }

      .field
        %label Option Name
        %input.name{ type: "text", placeholder: "Name" }
      .field
        .two.fields
          .field
            %label Option Type
            .ui.selection.dropdown
              %input.type{ type: "hidden" }
              %i.dropdown.icon
                .menu
                  .item{ data: { value: "1" } } Option 1
          .field
            %label Unit Price
            %input.unit-price{ type: "text", placeholder: "$15.70" }
      .field
        %label Option Website Link
        %input.url{ type: "text", placeholder: "URL" }
      .field
        %label Info
        %textarea.info{ rows: "2" }
      .field
        %label Images
        %input.images{ type: "file", multiple: true, data: { max_files: 2 } }

  .actions
    .ui.cancel.button Close
    .ui.blue.approve.button Save
    .ui.green.approve.button Save & Link

:css
  .ui.modal.finish-selection-modal .header {
    font-size: inherit;
    padding-top: 1em;
  }

  .ui.modal.finish-selection-modal .header h4 {
    margin: 0;
  }

  .ui.modal.finish-selection-modal .content.search-content {
    position: relative;
    min-height: 300px;
  }

:javascript
  $(document).ready(function () {
    var $searchOptionsContainer = $(".finish-selection-modal .search-options-container");
    var $searching = $(".finish-selection-modal .content .ui.inverted.dimmer");
    var $linking = $(".finish-selection-modal > .ui.inverted.dimmer");
    var $openCreateOption = $(".finish-selection-modal .actions .open-create-finish-option-modal");
    var $editFinishOptionModal = $(".edit-finish-option-modal");
    var $saving = $(".edit-finish-option-modal > .ui.inverted.dimmer");

    $(".ui.modal").modal({ allowMultiple: true, closable: false });

    FilePond.registerPlugin(FilePondPluginImagePreview);
    FilePond.registerPlugin(FilePondPluginFileValidateType);

    var $imageUpload = $editFinishOptionModal.find(".option-form .images");
    $imageUpload.filepond()
      .filepond("server", "/project/#{access_token}/finishes/options/images/upload")
      .filepond("acceptedFileTypes", ['image/png', 'image/jpeg']);
    var pond = FilePond.find($imageUpload[0]);

    $editFinishOptionModal.modal({
      closable: false,
      allowMultiple: true,
      onVisible: function () {
      },
      onDeny: function(){
        var val = confirm('Are you sure you want to close?  Any changes will be lost.')
        if (!val) return false;

        $linking.removeClass('active');
      },
      onApprove: function(e) {
        var $button = $(e);
        var $optionForm = $editFinishOptionModal.find(".option-form");
        var selectionId = $(".finish-selection-modal").data("selection-id");
        var d = {
          id: $optionForm.find('.record-id').val(),
          name: $optionForm.find(".name").val(),
          type: $optionForm.find(".type").val(),
          unit_price: $optionForm.find(".unit-price").val(),
          url: $optionForm.find(".url").val(),
          info: $optionForm.find(".info").val(),
          images: [],
        };

        var currentFiles = pond.getFiles();
        for (var i = 0; i < currentFiles.length; i++) {
          d["images"].push(currentFiles[i].serverId);
        }

        var isLoading = currentFiles.filter(function (x) {
          return x.status !== 5;
        }).length !== 0;

        if (isLoading) return false;

        $saving.addClass('active');

        if ($button.text() == "Save & Link") {
            // Add info for linking
            d["selection_id"] = selectionId;
        }

        // Save option
        var url = "/project/#{access_token}/finishes/option/save";
        $.post(url, d, function (data) {
          var dataJSON = JSON.parse(data);
          var option = dataJSON["option"] || {};

          if(option["List Card HTML"]) {
            var optionSelector = ".option[data-option-id=\"" + option["Record ID"] + "\"]";
            var $optionCard = $(option["List Card HTML"]);

            if (selectionId && $button.text() == "Save & Link") {
              var $selection = $(".selection[data-selection-id=\"" + selectionId + "\"]");

              if (!$selection.find(optionSelector).length) {
                $selection.find(".open-selection-option-modal").before($optionCard);
              }
            }

            var $oldOption = $(optionSelector);
            $oldOption.replaceWith($optionCard);

            $optionCard.find('.unlink-selection-option').popup({
              inline: true,
              on: "click",
              onHide: function() {
                $('.unlink-selection-option-popup .ui.red.button').text("Unlink");
              },
            });

            if ($button.text() == "Save & Link") {
              $(".finish-selection-modal").modal("hide");
            }
          }

          $linking.removeClass("active");
          $saving.removeClass("active");
          $(".edit-finish-option-modal").modal("hide");
        });

        return false;
      }
    })

    function populateEditFinishOptionModal(option, $el) {
      if(!option) option = {};
      var $form = $(".edit-finish-option-modal .option-form");

      $(".edit-finish-option-modal .option-name").text(option["name"] || "New Option");

      $form.find(".record-id").val(option["optionId"] || "");
      $form.find(".name").val(option["name"] || "");
      $form.find(".type").val(option["type"] || "");
      $form.find(".unit-price").val(option["unitPrice"] || "");
      $form.find(".url").val(option["url"] || "");
      $form.find(".info").val(option["info"] || "");

      if ($el) {
        pond.removeFiles();

        $el.find("img").each(function (i, img) {
          var src = $(img).attr("src");
          pond.addFile(src);
        })
      }
    }

    $openCreateOption.click(function () {
      populateEditFinishOptionModal();
      $linking.addClass("active");
      $editFinishOptionModal.modal('show');
    });

    $(".selections-container").on("click", ".open-edit-option-modal", function () {
      var $this = $(this);
      var $modal = $(".finish-selection-modal");
      var $selectionOption = $this.closest(".option");
      var $selection = $this.closest(".selection");
      var data = $selectionOption.data();

      var selectionId = $selection.data("selection-id");
      var selectionType = $selection.data("type");
      var selectionLocation = $selection.data("location");

      $(".finish-selection-modal").data("selection-id", selectionId);

      $(".finish-selection-modal .selection-type").text(selectionType);
      $(".finish-selection-modal .selection-location").text(selectionLocation);

      $(".finish-selection-modal .finish-search-input").val("");
      $(".finish-selection-modal .finish-search-input").trigger("keyup");
      $modal.modal("show");

      populateEditFinishOptionModal(data, $selectionOption);
      $linking.addClass("active");
      $editFinishOptionModal.modal("show")
    });

    $(".search-options-container").on("click", ".open-edit-option-modal", function () {
      var $this = $(this);
      var $selectionOption = $this.closest(".option");
      var data = $selectionOption.data();

      populateEditFinishOptionModal(data, $selectionOption);
      $linking.addClass("active");
      $editFinishOptionModal.modal("show")
    });

    $(".search-options-container").on("click", ".link-to-selection", function () {
      var $this = $(this);
      var $selectionOption = $this.closest(".option");
      var optionId = $selectionOption.data("option-id");
      var $modal = $this.closest(".finish-selection-modal");
      var selectionId = $modal.data("selection-id");

      $linking.addClass("active");

      var url = "/project/#{access_token}/finishes/selection/" + selectionId + "/option/" + optionId + "/link"

      $.post(url, function (data) {
        var dataJSON = JSON.parse(data);
        var $selection = $(".selection[data-selection-id=\"" + selectionId + "\"]");
        var option = dataJSON["option"] || {};

        if(option["List Card HTML"]) {
          var $optionCard = $(option["List Card HTML"]);
          $selection.find(".open-selection-option-modal").before($optionCard);
          $optionCard.find('.unlink-selection-option').popup({
            inline: true,
            on: "click",
            onHide: function() {
              $('.unlink-selection-option-popup .ui.red.button').text("Unlink");
            },
          });
        }

        $linking.removeClass("active");
        $modal.modal('hide');
      });
    });

    function searchForFinishes(search) {
      safe_search = encodeURIComponent(search)
      $.get("/project/#{access_token}/finishes/options/search", { s: safe_search }, function (data) {
        var $cards = [];
        var data = JSON.parse(data);
        var options = data["options"];

        $searchOptionsContainer.empty();

        for (var i = 0; i < options.length; i++) {
          $cards.push(options[i]["Search Card HTML"] || "");
        }

        $searchOptionsContainer.append($cards);
        $searching.removeClass("active");
      });
    }

    var debouncedSearch = _.debounce(searchForFinishes, 400)

    $(".finish-selection-modal .finish-search-input").keyup(function () {
      var $this = $(this);
      var searchText = $this.val();
      var $searching = $(".finish-selection-modal .content .ui.inverted.dimmer");

      $searching.addClass("active");
      $searchOptionsContainer.empty();
      debouncedSearch(searchText);
    });
  });
