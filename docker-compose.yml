web:
    image: shaneburkhart/construction-vr-demo
    ports:
        - "3000:4567"
    links:
        - pg
        - redis
    volumes:
        - .:/app
    env_file:
        - user.env
    command: "rerun --ignore views/* --ignore react/* --ignore public/* --background ruby server.rb"

stripe_webhooks:
    image: stripe/stripe-cli
    links:
        - web
    env_file:
        - user.env
    command: "--api-key $${STRIPE_SECRET_API_KEY} listen --forward-to=web:3000/stripe/hooks"

test:
    image: shaneburkhart/construction-vr-demo
    links:
        - pg
        - redis
    volumes:
        - .:/app
    env_file:
        - user.env
    command: "rerun --background rspec"

react_build:
    image: shaneburkhart/construction-vr-demo
    volumes:
        - .:/app
    command: "npm run watch"

web_prod:
    image: shaneburkhart/construction-vr-demo
    ports:
        - "4567:4567"
    links:
        - pg
        - redis
    env_file:
        - user.env
    command: "ruby server.rb"

pg:
    image: postgres
    ports:
        - "5432:5432"
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=mydb
    volumes:
        - ./data/pg:/var/lib/postgresql/data

testing_worker:
    image: shaneburkhart/construction-vr-demo
    volumes:
        - .:/app
    env_file:
        - user.env
    command: "ruby workers/skp_model_tester.rb"

notification_worker:
    image: shaneburkhart/construction-vr-demo
    volumes:
        - .:/app
    env_file:
        - user.env
    command: "ruby workers/skp_rendering_notification.rb"

redis:
    image: redis:3.2
    command: "redis-server --save \"\" --appendonly no"
